[OSEv3:children]
masters
etcd
nodes
lb

[OSEv3:vars]
# General Cluster Variables
## Usuario de ansible
ansible_ssh_user=ansible

## Permitimos que los comandos se ejecuten con 'sudo'
ansible_become=true

## Sincronizamos la hora
openshift_clock_enabled=true

## Nivel de debug
debug_level=4

## Tipo de Clúster a desplegar. Para OKD usar la palabra "origin" y para Openshift Enterprise usar "openshift-enterprise"
openshift_deployment_type=origin

## Versión a instalar.
openshift_release=v3.11

## ***No entiendo para que sirve esto
#openshift_master_admission_plugin_config={"openshift.io/ImagePolicy":{"configuration":{"apiVersion":"v1","executionRules":[{"matchImageAnnotations":[{"key":"images.openshift.io/deny-execution","value":"true"}],"name":"execution-denied","onResources":[{"resource":"pods"},{"resource":"builds"}],"reject":true,"skipOnResolutionFailure":true}],"kind":"ImagePolicyConfig"}}}

## Habilitamos el audit
openshift_master_audit_config={"enabled": true, "auditFilePath": "/var/lib/origin/audit-ocp.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}

## Para una configuracion avanzada del log generado por audit (No es necesario configurarlo)
#openshift_master_audit_policyfile

## Hostname asociado al cluster
openshift_master_cluster_hostname=consola.okd.cs.gadt.amxdigital.net

## Hostname publico, por el que se dara a conocer el cluster
openshift_master_cluster_public_hostname=consola.okd.cs.gadt.amxdigital.net

## Habilita la HA de OKD
openshift_master_cluster_method=native

## Se habilita para permitir reinicios en los master
openshift_rolling_restart_mode=system

## ***Permitimos que todos se puedan autenticar (https://docs.okd.io/3.11/install_config/configuring_authentication.html#AllowAllPasswordIdentityProvider)
openshift_master_identity_providers=[{'name': 'htpasswd_auth','login': 'true', 'challenge': 'true','kind': 'HTPasswdPasswordIdentityProvider',}]
# amxga/abcd1234
openshift_master_htpasswd_users={'amxga': 'amxga:$apr1$tK3xlhz9$TnPbB8NliWxfpKS5raAxX1'}

## Sirve para indicar el uso de certificados propios (En nuestro caso no creo que aplique)
#openshift_master_named_certificates
#openshift_master_overwrite_named_certificates
#openshift_hosted_router_certificate
#openshift_master_ca_certificate
#openshift_additional_ca

## Tiempo de expiracion de certificados autogenerados (los coloque a 10 años)
openshift_hosted_registry_cert_expire_days=3650
openshift_ca_cert_expire_days=3650
openshift_node_cert_expire_days=3650
openshift_master_cert_expire_days=3650
etcd_ca_default_days=3650

## Deja de actualizar el cluster (me imagino que es el nodo) una vez que el certificado tenga un tiempo de expiracion menor al indicado
openshift_certificate_expiry_warning_days=180

## ***A este no le entendi
#openshift_certificate_expiry_fail_on_warn

## Indicamos que se use firewalld 
os_firewall_use_firewalld=true

## Configuracion de las sesiones
#openshift_master_session_name
#openshift_master_session_max_seconds
#openshift_master_session_auth_secrets
#openshift_master_session_encryption_secrets

## Controla principalmente el pull de las images y conexion con los registry (No veo necesario configurarla)
#openshift_master_image_policy_config

## Aqui se indica la etiqueta de los servidores en donde deberan desplegarse los router (Deberian ser los bodos de Infra)
openshift_router_selector='node-role.kubernetes.io/infra=true'

## Aqui se indica la etiqueta de los servidores en donde deberán desplegarse el registry interno (Deberian ser los nodos de Infra)
openshift_registry_selector='node-role.kubernetes.io/infra=true'

## ***No entendi para que es este pedo
#openshift_template_service_broker_namespaces

## Configuracion para permitir el auto-escalado en ambientes de AWS (En nuestro caso no aplica, por eso la ponemos en false)
openshift_master_bootstrap_auto_approve=false

## Aqui se indica donde se hara el despliegue de algunos servicios de Ansible, faltaria investigar para que son esos servicios
ansible_service_broker_node_selector={"node-role.kubernetes.io/infra":"true"}

## Su funcion es la misma que el de la variable ansible_service_broker_node_selector
template_service_broker_selector={"node-role.kubernetes.io/infra":"true"}

## Aqui se indica en que servidores se podra realizar el despliegue de los pods, son todos aquellos computables (App)
osm_default_node_selector='node-role.kubernetes.io/compute=true'

## Configuracion de registries externos
#openshift_docker_additional_registries
#openshift_docker_insecure_registries
#openshift_docker_blocked_registries

## Indicamos el registry de confianza, si la variable openshift_deployment_type tiene el valor de openshift-enterprise el registry de confianza es registry.redhat.io
openshift_docker_ent_reg='docker.io'

## Sobreescribe la url por donde se expondran las metricas
#openshift_metrics_hawkular_hostname

## Esto es propio de AWS
#openshift_clusterid

## Tag de las imagenes utilizadas durante el despliegue del cluster
openshift_image_tag=v3.11.0

## Version de los RPM utilizados durante la instalacion 
#openshift_pkg_version=

## Wilcard para exponer las aplicaciones desplegadas en OKD
openshift_master_default_subdomain=apps.okd.cs.gadt.amxdigital.net

## Aqui indicamos el tipo de red que se desplegara para la conexion entre los pods
### Con la siguiente configuracion permitimos que todos los Pods se conozcan entre si (Dejamos el valor por defecto)
os_sdn_network_plugin_name=redhat/openshift-ovs-networkpolicy

## Segmento de red asocido a los Pods (Dejamos el valor por defecto)
#osm_cluster_network_cidr=10.128.0.0/14

## Segmento de red asociado a los Services (Dejamos el valor por defecto)
#openshift_portal_net=172.30.0.0/16

## Subneteo de la red utilizado para que cada host tenga una subred asociada (Dejamos el valor por defecto)
#osm_host_subnet_length=9 ##Esto significa que la subred creada tendra un /23, es decir, un host tendra la red 10.128.2.0/23 para los pods

## Aqui indicamos el servicio utilizado para realizar el proxy de los servicios (Dejamos el valor por defecto)
#openshift_node_proxy_mode=iptables

## Con esto indicamos que sea flannel el encargado de crear la red que comunicara a los pods y a los services entre si
openshift_use_flannel=false

## Indicamos que se use el plugin por defecto para la creacion de la red que comunicara a los pods y a los services entre si
openshift_use_openshift_sdn=true

## Puerto para la comunicacion de la red creada para pods y services (Dejamos el valor por defecto)
#openshift_sdn_vxlan_port=4789

## No considero necesaria esta configuracion
#openshift_public_hostname
#openshift_public_ip
#openshift_docker_options
#openshift_schedulable
#openshift_node_problem_detector_install

## Es para crear una etiqueta especial que permitira agrupar los hosts (No necearia)
#openshift_node_groups
openshift_node_groups=[{'name': 'node-config-master', 'labels': ['node-role.kubernetes.io/master=true']}, {'name': 'node-config-infra', 'labels': ['node-role.kubernetes.io/infra=true']}, {'name': 'node-config-compute', 'labels': ['node-role.kubernetes.io/compute=true']}, {'name': 'node-config-metrics', 'labels': ['node-role.kubernetes.io/metrics=true']}, {'name': 'node-config-log', 'labels': ['node-role.kubernetes.io/log=true']}]

## Puerto por donde se expondra la Api
openshift_master_api_port=8443

## Puerto por donde se expondra la consola web, debe tener el mismo valor que openshift_master_api_port
openshift_master_console_port=8443

## Este check sirve para vigilar que los nodos ya tienen las imágenes que se necesita. Te recomiendo quitarlo o de lo contrario deberás hacer muchos docker pulls en todos los nodos hasta tener TODAS Y CADA UNA de las imágenes necesarias.
openshift_disable_check=docker_image_availability,memory_availability

## Habilitamos las metricas de Hawkular
openshift_metrics_install_metrics=true
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/metrics": "true"}
#openshift_metrics_storage_volume_size=100Gi

## Aprovsionamiento dinamico de los pvc para las metricas
#openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/metrics": "true"}
#openshift_metrics_cassandra_pvc_storage_class_name="ceph-storage"
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/metrics": "true"}

## Deshabilitamos el aprovsionamiento dinamico de los pvc (este lo provee Ceph)
openshift_master_dynamic_provisioning_enabled=false

## Habilitamos el logging de OKD
openshift_logging_install_logging=true

## Indicamos en que nodos se hara el almacenamiento de los logs
openshift_logging_es_nodeselector={"node-role.kubernetes.io/log": "true"}
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/log": "true"} 
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/log": "true"}
openshift_logging_elasticsearch_replace_configmap=true
openshift_logging_es_memory_limit=512M
openshift_logging_elasticsearch_memory_limit=512M
#openshift_logging_es_pvc_size=100Gi
#openshift_logging_es_pvc_storage_class_name="ceph-storage"

## Instalamos la consola web de OKD
openshift_web_console_install=true

## Url de la consola web
openshift_console_hostname=consola.okd.cs.gadt.amxdigital.net

## No instalamos los servicios esos de Ansible
ansible_service_broker_install=false
template_service_broker_install=false

## Instalamos los operadores
openshift_enable_olm=true

[all]
okdmast01.okd.cs.gadt.amxdigital.net
okdlb01.okd.cs.gadt.amxdigital.net
okdinfra01.okd.cs.gadt.amxdigital.net
okdapp01.okd.cs.gadt.amxdigital.net
okdlog01.okd.cs.gadt.amxdigital.net
okdmetrics01.okd.cs.gadt.amxdigital.net

[okd]
okdmast01.okd.cs.gadt.amxdigital.net
okdlb01.okd.cs.gadt.amxdigital.net
okdinfra01.okd.cs.gadt.amxdigital.net
okdapp01.okd.cs.gadt.amxdigital.net
okdlog01.okd.cs.gadt.amxdigital.net
okdmetrics01.okd.cs.gadt.amxdigital.net

[etcd]
okdmast01.okd.cs.gadt.amxdigital.net

[masters]
okdmast01.okd.cs.gadt.amxdigital.net

[nodes]
okdmast01.okd.cs.gadt.amxdigital.net openshift_node_group_name='node-config-master'
okdapp01.okd.cs.gadt.amxdigital.net openshift_node_group_name='node-config-compute'
okdinfra01.okd.cs.gadt.amxdigital.net openshift_node_group_name='node-config-infra'
okdlog01.okd.cs.gadt.amxdigital.net openshift_node_group_name='node-config-log'
okdmetrics01.okd.cs.gadt.amxdigital.net openshift_node_group_name='node-config-metrics'

[app]
okdapp01.okd.cs.gadt.amxdigital.net

[lb]
okdlb01.okd.cs.gadt.amxdigital.net

#[ceph]
